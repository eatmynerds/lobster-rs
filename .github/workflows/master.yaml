name: Build Rust project
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]
    steps:
    - uses: hecrj/setup-rust-action@v2
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run tests
      run: |
        cargo build --release
        rm -r target/release/lobster-rs.d
        mv target/release/lobster-rs* target/release/lobster-rs-${{matrix.os}}
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: lobster-rs-${{ matrix.os }}
        path: target/release/lobster-rs* 
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: lobster-*
        merge-multiple: true

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "release-${{ github.run_number }}-${{ github.event.after }}"
        release_name: "Release ${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lobster-* 
        tag: main 
        overwrite: true
        file_glob: true

